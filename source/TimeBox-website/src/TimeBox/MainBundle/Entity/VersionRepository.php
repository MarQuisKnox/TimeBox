<?php

namespace TimeBox\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VersionRepository extends EntityRepository
{
    public function getFileVersions($user, $fileId)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT v
                FROM TimeBoxMainBundle:Version v
                JOIN v.file f
                WHERE f.user = :user
                AND v.file = :fileId
                ORDER BY v.date DESC
            ')->setParameters(array(
               'user'   => $user,
               'fileId' => $fileId
            ));
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getLastestFileVersion($user, $filesId)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT MAX(v.id) as id, MAX(v.date) as date
                FROM TimeBoxMainBundle:Version v
                JOIN v.file f
                WHERE f.user = :user
                AND v.file IN (:filesId)
                GROUP BY v.file
                ORDER BY v.date DESC
            ')->setParameters(array(
               'user'   => $user,
               'filesId' => $filesId
            ));
        try {
            $res = $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }

        $ids = array();
        foreach ($res as $version) {
            $ids[] = $version['id'];
        }

        $query = $this->getEntityManager()
            ->createQuery('
                SELECT v
                FROM TimeBoxMainBundle:Version v
                WHERE v.id = :id
            ')->setParameters(array(
               'id'   => $ids
            ));
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}