{% extends "TimeBoxMainBundle::layout.html.twig" %}

{% block container %}

    {% set fileDeleted = '' %}
    {% set hideAction = '' %}
    {% if isDeleted %}
        {% set fileDeleted = '_deleted' %}
        {% set hideAction = ' hide' %}
    {% endif %}

    <div class="actions">
        <ul {% if isDeleted %}class="FileRelatedAction"{% endif %}>
            <li>Actions:</li>
            <li class="{{ hideAction }}">
                <a href="{{ path('time_box_main_folder_new', { 'parentFolderId':folderId }) }}"><img src="{{ asset('img/icons/folder-add.png') }}" alt="folder add icon" />New folder</a>
            </li>
            <li class="{{ hideAction }}">
                <a href="{{ path('time_box_main_file_upload', { 'folderId':folderId }) }}"><img src="{{ asset('img/icons/file-upload.png') }}" alt="upload icon" />Upload a new file</a>
            </li>
            <li class="FileRelatedAction FolderRelatedAction download {{ hideAction }}">
                <form target="_blank" action="{{ path('time_box_main_file_download') }}" method="post">
                    <input type="hidden" name="foldersId" value=""/>
                    <input type="hidden" name="filesId" value=""/>
                    <a href="#"><img src="{{ asset('img/icons/file-download.png') }}" alt="download icon" />Download</a>
                </form>
            </li>
            <li class="FileRelatedAction {{ hideAction }}">
                <a href=""><img src="{{ asset('img/icons/link.png') }}" alt="share icon" class="shareIcon" />Share</a>
            </li>
            <li class="FileRelatedAction FolderRelatedAction rename {{ hideAction }}">
                <a href=""><img src="{{ asset('img/icons/file-edit.png') }}" alt="rename icon" />Rename</a>
            </li>
            <li class="FileRelatedAction FolderRelatedAction delete">
                <a href="{{ path('time_box_main_file' ~ fileDeleted, {'folderId':folderId}) }}"><img src="{{ asset('img/icons/file-delete.png') }}" alt="file delete icon" />Delete</a>
            </li>
            <li class="FileRelatedAction FolderRelatedAction move">
                <a href=""><img src="{{ asset('img/icons/file-go.png') }}" alt="move icon" />
                    {%- if isDeleted -%}
                    Restore
                    {%- else -%}
                    Move
                    {%- endif -%}
                </a>
            </li>
        </ul>
    </div>

    <table class="file">
        <thead>
            <tr>
                <td colspan="5" class="driveBreadcrumb">
                    <span class="fLeft">
                        <a href="{{ path('time_box_main_file' ~ fileDeleted) }}">
                            {%- if isDeleted -%} Recycle bin {%- else -%} Drive {%- endif -%}
                        </a>
                    </span>
                    <ul>
                        {% for folder in breadcrumb %}
                            <li><a href="{{ path('time_box_main_file' ~ fileDeleted, {'folderId': folder.id}) }}">{{ folder.name }}</a></li>
                        {% endfor %}
                    </ul>
                </td>
            </tr>
        </thead>
        <tbody class="selectable">
            <tr>
                <th class="fileCheckbox">{# Checkbox #}</th>
                <th class="fileType">{# Type #}</th>
                <th class="fileTitle">Title</th>
                <th class="size">Size</th>
                <th class="lastEdit">Last Edit</th>
            </tr>
            {% for folder in folders %}
            <tr data-id="{{ folder.id }}" class="folder">
                <td class="fileCheckbox checkboxImg"></td>
                <td class="fileType">
                    <img src="{{ asset('img/icons/folder.png') }}" alt="folder icon" />
                </td>
                <td class="fileTitle">
                    <a href="{{ path('time_box_main_file' ~ fileDeleted, {'folderId': folder.id}) }}">{{ folder.name }}</a>
                </td>
                <td class="size"></td>
                <td class="lastEdit"></td>
            </tr>
            {% endfor %}
            {% for file in files %}
            <tr data-id="{{ file.id }}" class="file">
                <td class="fileCheckbox checkboxImg"></td>
                <td class="fileType">
                {% if file.type in types %}
                    <img src="{{ asset('img/icons/file-' ~ file.type ~ '.png') }}" alt="{{ file.type }} icon" />
                {% else %}
                    <img src="{{ asset('img/icons/file.png') }}" alt="{{ file.type }} icon" title="{{ file.type }}" />
                {% endif %}
                </td>
                <td class="fileTitle">{{ file.name }}{% if file.type is not null %}.{{ file.type }}{% endif %}</td>
                <td class="size">
                {% if file.totalSize > 1000000  %}
                    {{ file.totalSize // 1000000 + 1 }} MB
                {% elseif file.totalSize > 1000  %}
                    {{ file.totalSize // 1000 + 1 }} KB
                {% else %}
                    {{ file.totalSize }} B
                {% endif %}
                </td>
                <td class="lastEdit">
                {% if "now"|date("Y/m/d") == file.date|date('Y/m/d') %}
                    {{ file.date|date('H:i') }}
                {% else %}
                    {{ file.date|date('Y/m/d') }}
                {% endif %}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function() {
            $( ".FileRelatedAction" ).hide();

            $("td.checkboxImg").click(function(evt) {
                if (evt.shiftKey) {
                    var firstIndex = $('table.file tr.selected').first().index();
                    var lastIndex = $(this).parent('tr').index();
                    if (lastIndex < firstIndex) {
                        firstIndex += lastIndex;
                        lastIndex = Math.abs(firstIndex - lastIndex);
                        firstIndex -= lastIndex;
                    }
                    $("table.file tr.file, table.file tr.folder").each(function() {
                        var i = $(this).index();
                        if (i >= firstIndex && i <= lastIndex) {
                            $(this).addClass("selected");
                        }
                    });
                }
                else {
                    $(this).parent().toggleClass("selected");
                }
                selectedItemAction();
                return false;
            });

            $("table.file tr.file, table.file tr.folder").click(function(evt) {
                if (evt.target.nodeName == 'A') {
                    return true;
                }

                var nbSelectedItem = $('tr.selected').length;

                if (evt.ctrlKey) {
                    $(this).toggleClass("selected");
                }
                else if (evt.shiftKey) {
                    var firstIndex = $('table.file tr.selected').first().index();
                    var lastIndex = $(this).index();
                    if (lastIndex < firstIndex) {
                        firstIndex += lastIndex;
                        lastIndex = Math.abs(firstIndex - lastIndex);
                        firstIndex -= lastIndex;
                    }
                    $("table.file tr.file, table.file tr.folder").each(function() {
                        var i = $(this).index();
                        if (i >= firstIndex && i <= lastIndex) {
                            $(this).addClass("selected");
                        }
                    });
                }
                else {
                    if (nbSelectedItem == 0) {
                        $(this).toggleClass("selected");
                    }
                    else if (nbSelectedItem == 1) {
                        $(this).siblings().removeClass("selected");
                        $(this).toggleClass("selected");
                    }
                    else if (nbSelectedItem > 0) {
                        $(this).siblings().removeClass("selected");
                    }
                }

                selectedItemAction();
            });

            $(".delete").click(function() {
                var permanentDelete = false;
                {% if isDeleted %}
                    if (confirm('Are you sure to permanently delete selected files and folders?') == false)
                        return false;
                    permanentDelete = true;
                {% endif %}
                var itemSelectedId = getSelectedItemId();
                var foldersId = itemSelectedId[0];
                var filesId = itemSelectedId[1];

                $.ajax({
                    url: "{{ path('time_box_main_file_delete') }}",
                    type: "POST",
                    data: {
                        'filesId': JSON.stringify(filesId),
                        'foldersId': JSON.stringify(foldersId),
                        'currentFolderId': '{{ folderId }}',
                        'permanentDelete': permanentDelete
                    },
                    success: function( data ) {
                        window.location.replace(data);
                    }
                });
                return false;
            });

            $(".move").click(function() {
                var itemSelectedId = getSelectedItemId();
                var foldersId = itemSelectedId[0];
                var filesId = itemSelectedId[1];

                $.ajax({
                    url: "{{ path('time_box_main_file_move') }}",
                    type: "POST",
                    data: {
                        'filesId': JSON.stringify(filesId),
                        'foldersId': JSON.stringify(foldersId),
                        'currentFolderId': '{{ folderId }}'
                    },
                    success: function( data ) {
                        $(".container").html(data);
                    }
                });
                return false;
            });

            $(".rename").click(function() {
                var itemSelectedId = getSelectedItemId();
                var foldersId = itemSelectedId[0];
                var filesId = itemSelectedId[1];

                $.ajax({
                    url: "{{ path('time_box_main_file_rename') }}",
                    type: "POST",
                    data: {
                        'filesId': JSON.stringify(filesId),
                        'foldersId': JSON.stringify(foldersId),
                        'currentFolderId': '{{ folderId }}'
                    },
                    success: function( data ) {
                        $(".container").html(data);
                    }
                });
                return false;
            });

            $("li.download a").click(function() {
                var itemSelectedId = getSelectedItemId();
                var foldersId = itemSelectedId[0];
                var filesId = itemSelectedId[1];
                $("li.download form input[name=foldersId]").val( JSON.stringify(foldersId) );
                $("li.download form input[name=filesId]").val( JSON.stringify(filesId) );
                $("li.download form").submit();
            });


        });

        var ajaxRequest = null;

        function getSelectedItemId() {
            var foldersId = new Array();
            $('table.file tr.folder.selected').each(function() {
                foldersId.push( $(this).attr('data-id') );
            });

            var filesId = new Array();
            $('table.file tr.file.selected').each(function() {
                filesId.push( $(this).attr('data-id') );
            });

            return new Array(foldersId, filesId);
        }

        function selectedItemAction() {
            var nbSelectedItem = $('table.file tr.selected').length;
            var nbSelectedFile = $('table.file tr.file.selected').length;
            var nbSelectedFolder = $('table.file tr.folder.selected').length;
            if (nbSelectedItem == 1) {
                if(nbSelectedFolder > 0){
                     $( ".FileRelatedAction").hide();
                     $( ".FolderRelatedAction" ).stop(false, true).slideDown( "slow" );
                }
                else
                    $( ".FileRelatedAction" ).stop(false, true).slideDown( "slow" );
                hideVersions();

                if (nbSelectedFile == 1) {
                    var fileId = $('table.file tr.file.selected').attr('data-id');
                    if (ajaxRequest != null) {
                        ajaxRequest.abort();
                    }
                    ajaxRequest = $.ajax({
                        url: "{{ path('time_box_main_file_versions') }}",
                        type: "POST",
                        data: {'fileId': fileId},
                        success: function( data ) {
                            if (data == 'not logged') {
                                window.location.replace("{{ path('time_box_main_homepage') }}");
                            }
                            else {
                                nbSelectedFile = $('table.file tr.file.selected').length;
                                if (nbSelectedFile == 1) {
                                    $('tr.file.selected[data-id='+fileId+']').after( data );
                                    $("tr.version ul").hide().stop(false, true).slideDown();
                                }
                            }
                            ajaxRequest = null;
                        }
                    });
                }
            }
            else if (nbSelectedItem > 1) {
                if(nbSelectedFolder > 0){
                     $( ".FileRelatedAction").hide();
                     $( ".FolderRelatedAction" ).stop(false, true).slideDown( "slow" );
                }
                else
                    $( ".FileRelatedAction" ).stop(false, true).slideDown( "slow" );
                hideVersions();
            }
            else {
                $( ".FileRelatedAction" ).stop(false, true).slideUp( "slow" );
                hideVersions();
            }
        }

        function hideVersions() {
            $("tr.version").addClass("toDelete");
            $("tr.version ul").slideUp(function() {
                $("tr.version.toDelete").remove();
            });
        }
    </script>
{% endblock %}
